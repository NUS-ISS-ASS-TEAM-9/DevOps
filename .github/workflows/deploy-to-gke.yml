name: Deploy to GKE

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      container-port:
        required: false
        type: string
        default: "8080"
    secrets:
      GCP_PROJECT_ID:
        required: true
      GCP_REGION:
        required: true
      GCP_SA_KEY:
        required: true
      GCP_CLUSTER_NAME:
        required: true
      CLOUDSQL_CONNECTION_NAME:
        required: true
      DB_USERNAME:
        required: true
      DB_PASSWORD:
        required: true
      DB_HOST:
        required: true
      DB_PORT:
        required: true
      DB_NAME:
        required: true
      RABBITMQ_USERNAME:
        required: true
      RABBITMQ_PASSWORD:
        required: true
      RABBITMQ_VHOST:
        required: true
      RABBITMQ_ADDRESSES:
        required: true
      JWT_SECRET:
        required: true
      JWT_EXPIRATION:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Set up kubectl
        run: |
          gcloud container clusters get-credentials ${{ secrets.GCP_CLUSTER_NAME }} \
            --region ${{ secrets.GCP_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Checkout DevOps templates
        uses: actions/checkout@v4
        with:
          repository: NUS-ISS-ASS-TEAM-9/Devops
          path: devops

      - name: Inject configurations
        run: |
          export DB_USERNAME="${{ secrets.DB_USERNAME }}"
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          export DB_HOST="${{ secrets.DB_HOST }}"
          export DB_PORT="${{ secrets.DB_PORT }}"
          export DB_NAME="${{ secrets.DB_NAME }}"
          export RABBITMQ_USERNAME="${{ secrets.RABBITMQ_USERNAME }}"
          export RABBITMQ_PASSWORD="${{ secrets.RABBITMQ_PASSWORD }}"
          export RABBITMQ_VHOST="${{ secrets.RABBITMQ_VHOST }}"
          export RABBITMQ_ADDRESSES="${{ secrets.RABBITMQ_ADDRESSES }}"
          export JWT_SECRET="${{ secrets.JWT_SECRET }}"
          export JWT_EXPIRATION="${{ secrets.JWT_EXPIRATION }}"

          envsubst < devops/templates/db-config.yaml > db-config.yaml
          envsubst < devops/templates/configmap.yaml > configmap.yaml
          envsubst < devops/templates/rabbitmq-config.yaml > rabbitmq-config.yaml

          kubectl apply -f db-config.yaml
          kubectl apply -f configmap.yaml
          kubectl apply -f rabbitmq-config.yaml

      - name: Apply Kubernetes Manifests
        run: |
          SERVICE_NAME_LOWERCASE=$(echo "${{ inputs.service-name }}" | tr '[:upper:]' '[:lower:]')
              for file in devops/k8s/$SERVICE_NAME_LOWERCASE/*.yaml; do
              envsubst < "$file" > "processed-$(basename "$file")"
              kubectl apply -f "processed-$(basename "$file")"
            done
          
