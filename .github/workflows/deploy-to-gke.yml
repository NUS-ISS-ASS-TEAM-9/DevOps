name: Deploy to GKE

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      container-port:
        required: false
        type: string
        default: "8080"
    secrets:
      GCP_PROJECT_ID:
        required: true
      GCP_REGION:
        required: true
      GCP_SA_KEY:
        required: true
      GCP_CLUSTER_NAME:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Set up kubectl
        run: |
          gcloud container clusters get-credentials ${{ secrets.GCP_CLUSTER_NAME }} \
            --region ${{ secrets.GCP_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Inject DB secrets/configmap
        run: |
          export DB_USERNAME="${{ secrets.DB_USERNAME }}"
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          
          envsubst < .github/workflows/templates/configmap.yaml > configmap.yaml
          envsubst < .github/workflows/templates/db-config.yaml > db-config.yaml
          
          kubectl apply -f db-config.yaml
          kubectl apply -f configmap.yaml

      - name: Deploy to GKE
        run: |
          SERVICE_NAME_LOWERCASE=$(echo "${{ inputs.service-name }}" | tr '[:upper:]' '[:lower:]')
          REGION_URL="${{ secrets.GCP_REGION }}-docker.pkg.dev"

          cat <<EOF > deployment.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: ${SERVICE_NAME_LOWERCASE}
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: ${SERVICE_NAME_LOWERCASE}
            template:
              metadata:
                labels:
                  app: ${SERVICE_NAME_LOWERCASE}
              spec:
                containers:
                - name: ${SERVICE_NAME_LOWERCASE}
                  image: ${REGION_URL}/${{ secrets.GCP_PROJECT_ID }}/devops/${SERVICE_NAME_LOWERCASE}:${GITHUB_SHA}
                  resources:
                    requests:
                      cpu: "50m"       # 0.05 vCPU
                      memory: "128Mi"  # 128MB RAM
                    limits:
                      cpu: "100m"      # 0.1 vCPU
                      memory: "256Mi"  # 256MB RAM
                  ports:
                  - containerPort: ${{ inputs.container-port }}
                  - envFrom: 
                    - configMapRef:
                        name: configmap
                    - secretRef:
                        name: db-config
          EOF

          cat <<EOF > service.yaml
          apiVersion: v1
          kind: Service
          metadata:
            name: ${SERVICE_NAME_LOWERCASE}
          spec:
            type: LoadBalancer
            selector:
              app: ${SERVICE_NAME_LOWERCASE}
            ports:
            - protocol: TCP
              port: 80
              targetPort: ${{ inputs.container-port }}
          EOF

          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
